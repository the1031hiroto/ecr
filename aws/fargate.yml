AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Type: String

  Repository:
    Type: String

  ServiceCpu:
    Type: Number

  ServiceMemory:
    Type: Number

  ServiceSecurityGroup:
    Type: String

  AwslogsGroup:
    Type: String
    Default: ecr

  DBEndpoint:
    Type: String

  HTTPPort:
    Type: String

  ALBTargetGroup:
    Type: String

  PrivateSubnet1:
    Type: String

  PrivateSubnet2:
    Type: String


Resources:
  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/ecs/logs/${ProjectName}-ecs-group"

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${ProjectName}-cluster"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref ServiceCpu
      Memory: !Ref ServiceMemory
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref FargateTaskExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: !Sub "${ProjectName}-container"
          Image: !Sub "${Repository}:latest"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Sub "${ProjectName}-container"
          PortMappings:
            - HostPort: !Ref HTTPPort
              Protocol: tcp
              ContainerPort: !Ref HTTPPort
          Environment:
            - Name: RAILS_ENV
              Value: production
            - Name: DATABASE_HOST
              Value: !Ref DBEndpoint


  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      ServiceName: !Sub "${ProjectName}-service"
      HealthCheckGracePeriodSeconds: 3600
      LoadBalancers:
        - ContainerName: !Sub "${ProjectName}-container"
          ContainerPort: !Ref HTTPPort
          TargetGroupArn: !Ref ALBTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref ServiceSecurityGroup
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2

  FargateTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole


Outputs:
  Cluster:
    Value: !Ref Cluster

  FargateTaskExecutionRole:
    Value: !Ref FargateTaskExecutionRole
